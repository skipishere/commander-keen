<Project Sdk="Godot.NET.Sdk/4.5.0">
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <EnableDynamicLoading>true</EnableDynamicLoading>
    <RootNamespace>Commanderkeen</RootNamespace>
  </PropertyGroup>

  <!-- Get version info during build -->
  <Target Name="GetGitInfo" BeforeTargets="GetAssemblyVersion;GenerateAssemblyInfo">
    <PropertyGroup>
      <!-- Use VERSION_TAG environment variable if provided, otherwise use local dev version -->
      <RawVersion Condition="'$(VERSION_TAG)' != ''">$(VERSION_TAG)</RawVersion>
      <RawVersion Condition="'$(VERSION_TAG)' == ''">0.0.1-dev</RawVersion>
      
      <!-- Remove 'v' prefix if present -->
      <CleanRawVersion>$([System.Text.RegularExpressions.Regex]::Replace('$(RawVersion)', '^v', ''))</CleanRawVersion>
      
      <!-- Extract just the version numbers (major.minor.patch) from start of string -->
      <CleanVersion>$([System.Text.RegularExpressions.Regex]::Replace('$(CleanRawVersion)', '^(\d+\.\d+\.\d+).*', '$1'))</CleanVersion>
      
      <!-- If regex didn't match a version pattern, use fallback -->
      <CleanVersion Condition="'$(CleanVersion)' == '$(CleanRawVersion)' AND !$([System.Text.RegularExpressions.Regex]::IsMatch('$(CleanRawVersion)', '^\d+\.\d+\.\d+'))">0.0.1</CleanVersion>
      
      <!-- Keep the original for InformationalVersion -->
      <InformationalVersionValue>$(CleanRawVersion)</InformationalVersionValue>
    </PropertyGroup>
    
    <Message Text="Version Parsing - Raw: '$(RawVersion)', Parsed: '$(CleanVersion)', Info: '$(InformationalVersionValue)'" Importance="high" />
    
    <!-- Update version properties with parsed info -->
    <PropertyGroup>
      <!-- InformationalVersion can handle any format - use the full version -->
      <InformationalVersion>$(InformationalVersionValue)</InformationalVersion>
      <!-- These must be in standard .NET format (major.minor.patch[.build]) -->
      <Version>$(CleanVersion)</Version>
      <AssemblyVersion>$(CleanVersion)</AssemblyVersion>
      <FileVersion>$(CleanVersion)</FileVersion>
    </PropertyGroup>
  </Target>
</Project>